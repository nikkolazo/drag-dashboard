---
interface Props {
  years: number[];
}

const { years } = Astro.props;

// SVG parameters - EXACT match to MultiYearDonutChart for same viewBox size
const centerX = 200;
const centerY = 200;
const baseInnerRadius = 50;
const ringWidth = 20;
const gapBetweenRings = 3;

// Calculate viewBox - make it more square and similar size to MultiYearDonutChart
const maxRadius = baseInnerRadius + (years.length * (ringWidth + gapBetweenRings));
const viewBoxSize = (maxRadius + 50) * 2;
const svgWidth = viewBoxSize; // Same as height for square viewBox
const svgHeight = viewBoxSize;

// Helper to create half-circle arc path (opening to the left)
function createHalfCircleArc(cx: number, cy: number, radius: number) {
  // Start at top (270 degrees), end at bottom (90 degrees)
  // This creates an arc opening to the left
  const startX = cx;
  const startY = cy - radius;
  const endX = cx;
  const endY = cy + radius;

  // Arc from top to bottom, curving left
  return `M ${startX} ${startY} A ${radius} ${radius} 0 0 0 ${endX} ${endY}`;
}

// Create gray rings for each year with label positions
const rings = years.map((year, index) => {
  const innerRadius = baseInnerRadius + (index * (ringWidth + gapBetweenRings));
  const outerRadius = innerRadius + ringWidth;
  const ringMidRadius = innerRadius + (ringWidth / 2);

  // Create half-circle arcs
  const outerArc = createHalfCircleArc(centerX, centerY, outerRadius);
  const innerArc = createHalfCircleArc(centerX, centerY, innerRadius);

  // Calculate line endpoint on the ring (at bottom of arc, 90 degrees)
  const angle = 90; // Bottom of the arc (where each ring ends)
  const angleRad = (angle * Math.PI) / 180;
  const lineStartX = centerX + (ringMidRadius * Math.cos(angleRad));
  const lineStartY = centerY + (ringMidRadius * Math.sin(angleRad));

  // Label position (to the right of the chart, closer to rings)
  const labelX = centerX + maxRadius + 45;
  const labelY = 60 + (index * 32); // Evenly spaced vertically

  return { year, innerRadius, outerRadius, outerArc, innerArc, lineStartX, lineStartY, labelX, labelY };
});
---

<div class="flex flex-col items-center">
  <h3 class="text-sm font-semibold mb-4 text-slate-400">Year Reference</h3>
  <svg viewBox={`0 0 ${svgWidth} ${svgHeight}`} class="w-full max-w-lg h-auto">
    {/* Draw gray half-circle rings */}
    {rings.map(({ outerArc, innerArc, lineStartX, lineStartY, labelX, labelY, year }) => (
      <g>
        {/* Half-circle ring path */}
        <path
          d={outerArc}
          fill="none"
          stroke="#4b5563"
          stroke-width={ringWidth}
          opacity="0.3"
        />

        {/* Connecting line from ring to label */}
        <line
          x1={lineStartX}
          y1={lineStartY}
          x2={labelX - 32}
          y2={labelY}
          stroke="#6b7280"
          stroke-width="2"
          stroke-dasharray="4,3"
          opacity="0.7"
        />

        {/* Year label on the right */}
        <g>
          <rect
            x={labelX - 30}
            y={labelY - 12}
            width="60"
            height="26"
            rx="4"
            fill="#374151"
            stroke="#6b7280"
            stroke-width="1.5"
          />
          <text
            x={labelX}
            y={labelY + 6}
            text-anchor="middle"
            class="text-sm font-bold fill-slate-100"
          >
            {year}
          </text>
        </g>
      </g>
    ))}

    <!-- Center text -->
    <text x={centerX} y={centerY - 5} text-anchor="middle" class="text-xl font-bold fill-slate-100">
      {years.length}
    </text>
    <text x={centerX} y={centerY + 10} text-anchor="middle" class="text-xs fill-slate-400">
      Years
    </text>
  </svg>
  <p class="text-xs text-slate-500 mt-3 text-center">Inner ring = earliest year</p>
</div>
